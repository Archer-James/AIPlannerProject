"""empty message

<<<<<<<< HEAD:AIPlanner/alembic/versions/e010082fa8f7_.py
Revision ID: e010082fa8f7
Revises: 
Create Date: 2024-10-23 22:05:44.403772
========
Revision ID: 0424910d851d
Revises: 
Create Date: 2024-10-25 15:28:31.481260
>>>>>>>> beta:AIPlanner/alembic/versions/0424910d851d_.py

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
<<<<<<<< HEAD:AIPlanner/alembic/versions/e010082fa8f7_.py
revision: str = 'e010082fa8f7'
========
revision: str = '0424910d851d'
>>>>>>>> beta:AIPlanner/alembic/versions/0424910d851d_.py
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('canvas_hash_id', sa.Integer(), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recur_frequency', sa.Integer(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('task_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('priority_level', sa.Integer(), nullable=False),
    sa.Column('assigned_block_date', sa.Date(), nullable=False),
    sa.Column('assigned_block_start_time', sa.Time(), nullable=False),
    sa.Column('assigned_block_duration', sa.Interval(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
<<<<<<<< HEAD:AIPlanner/alembic/versions/e010082fa8f7_.py
    sa.ForeignKeyConstraint(['user_id'], ['user.canvas_hash_id'], ),
========
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
>>>>>>>> beta:AIPlanner/alembic/versions/0424910d851d_.py
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task')
    op.drop_table('user')
    # ### end Alembic commands ###
